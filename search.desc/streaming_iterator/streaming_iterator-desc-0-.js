searchState.loadedDescShard("streaming_iterator", 0, "Streaming iterators.\nA streaming iterator that concatenates two streaming …\nA normal, non-streaming, iterator which converts the …\nA streaming iterator which yields elements from a normal, …\nA streaming iterator which yields elements from an …\nA streaming iterator which yields elements from an …\nA normal, non-streaming, iterator which converts the …\nA streaming iterator able to yield elements from both ends.\nA mutable streaming iterator able to yield elements from …\nA simple iterator that returns nothing.\nA streaming iterator which filters the elements of a …\nAn iterator which both filters and maps elements of a …\nA regular, non-streaming iterator which both filters and …\nA streaming iterator that maps elements to iterators with …\nA streaming iterator that flattens nested streaming …\nA simple iterator that returns items from a function call.\nA streaming iterator which is well-defined before and …\nA streaming iterator that calls a function with element …\nConversion from <code>IntoIterator</code> to <code>StreamingIterator</code>.\nThe type of the elements being iterated over.\nA streaming iterator which transforms the elements of a …\nA regular, non-streaming iterator which transforms the …\nA regular, non-streaming iterator which transforms the …\nA streaming iterator which transforms the elements of a …\nA simple iterator that returns exactly one item.\nA simple iterator that returns exactly one item from a …\nA simple iterator that repeats an item endlessly.\nA simple iterator that endlessly returns items from a …\nA streaming iterator which returns elements in the …\nA streaming iterator which skips a number of elements in a …\nA streaming iterator which skips initial elements that …\nAn interface for dealing with streaming iterators.\nAn interface for dealing with mutable streaming iterators.\nAn iterator where each successive item is computed from …\nA streaming iterator which only yields a limited number of …\nA streaming iterator which only returns initial elements …\nA streaming iterator which returns overlapping mutable …\nAdvances the iterator to the next element.\nAdvances the iterator to the next element from the back of …\nDetermines if all elements of the iterator satisfy a …\nDetermines if any elements of the iterator satisfy a …\nBorrows an iterator, rather than consuming it.\nConsumes two iterators and returns a new iterator that …\nProduces a normal, non-streaming, iterator by cloning the …\nTurns a normal, non-streaming iterator into a streaming …\nTurns an iterator of mutable references into a streaming …\nTurns an iterator of references into a streaming iterator.\nProduces a normal, non-streaming, iterator by copying the …\nConsumes the iterator, counting the number of remaining …\nCreates an empty iterator.\nCreates an iterator which uses a closure to determine if …\nCreates an iterator which both filters and maps by …\nCreates a regular, non-streaming iterator which both …\nReturns the first element of the iterator that satisfies …\nCreates an iterator which flattens iterators obtained by …\nCreates an iterator which flattens nested streaming …\nReduces the iterator’s elements to a single, final value.\nReduces the iterator’s mutable elements to a single, …\nCalls a closure on each element of an iterator.\nCalls a closure on each mutable element of an iterator.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates an iterator that returns items from a function …\nCreates an iterator which is “well behaved” at the …\nReturns a reference to the current element of the iterator.\nReturns a mutable reference to the current element of the …\nCall a closure on each element, passing the element on. …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTurns an <code>IntoIterator</code> into a <code>StreamingIterator</code>.\nTurns an <code>IntoIterator</code> of mutable references into a …\nTurns an <code>IntoIterator</code> of references into a …\nChecks if <code>get()</code> will return <code>None</code>.\nCreates an iterator which transforms elements of this …\nCreates a regular, non-streaming iterator which transforms …\nCreates a regular, non-streaming iterator which transforms …\nCreates an iterator which transforms elements of this …\nAdvances the iterator and returns the next value.\nAdvances the iterator and returns the next value from the …\nAdvances the iterator and returns the next mutable value …\nAdvances the iterator and returns the next mutable value.\nConsumes the first <code>n</code> elements of the iterator, returning …\nCreates an iterator that returns exactly one item.\nCreates an iterator that returns exactly one item from a …\nReturns the index of the first element of the iterator …\nCreates an iterator that returns an item endlessly.\nCreates an iterator that endlessly returns items from a …\nCreates an iterator which returns elemens in the opposite …\nReduces the iterator’s elements to a single, final …\nReduces the iterator’s mutable elements to a single, …\nReturns the bounds on the remaining length of the iterator.\nCreates an iterator which skips the first <code>n</code> elements.\nCreates an iterator that skips initial elements matching a …\nCreates an iterator where each successive item is computed …\nCreates an iterator which only returns the first <code>n</code> …\nCreates an iterator which only returns initial elements …\nCreates an iterator over all contiguous windows of length …")