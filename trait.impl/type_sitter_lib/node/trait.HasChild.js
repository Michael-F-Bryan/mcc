(function() {
    var implementors = Object.fromEntries([["mcc_syntax",[["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.HasChild.html\" title=\"trait type_sitter_lib::node::HasChild\">HasChild</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.AlignasQualifier.html\" title=\"struct mcc_syntax::ast::AlignasQualifier\">AlignasQualifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.HasChild.html\" title=\"trait type_sitter_lib::node::HasChild\">HasChild</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.AttributeSpecifier.html\" title=\"struct mcc_syntax::ast::AttributeSpecifier\">AttributeSpecifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.HasChild.html\" title=\"trait type_sitter_lib::node::HasChild\">HasChild</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.BitfieldClause.html\" title=\"struct mcc_syntax::ast::BitfieldClause\">BitfieldClause</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.HasChild.html\" title=\"trait type_sitter_lib::node::HasChild\">HasChild</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.ElseClause.html\" title=\"struct mcc_syntax::ast::ElseClause\">ElseClause</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.HasChild.html\" title=\"trait type_sitter_lib::node::HasChild\">HasChild</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.ExtensionExpression.html\" title=\"struct mcc_syntax::ast::ExtensionExpression\">ExtensionExpression</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.HasChild.html\" title=\"trait type_sitter_lib::node::HasChild\">HasChild</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.FieldDesignator.html\" title=\"struct mcc_syntax::ast::FieldDesignator\">FieldDesignator</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.HasChild.html\" title=\"trait type_sitter_lib::node::HasChild\">HasChild</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.MsBasedModifier.html\" title=\"struct mcc_syntax::ast::MsBasedModifier\">MsBasedModifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.HasChild.html\" title=\"trait type_sitter_lib::node::HasChild\">HasChild</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.MsDeclspecModifier.html\" title=\"struct mcc_syntax::ast::MsDeclspecModifier\">MsDeclspecModifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.HasChild.html\" title=\"trait type_sitter_lib::node::HasChild\">HasChild</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.MsPointerModifier.html\" title=\"struct mcc_syntax::ast::MsPointerModifier\">MsPointerModifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.HasChild.html\" title=\"trait type_sitter_lib::node::HasChild\">HasChild</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.ParenthesizedExpression.html\" title=\"struct mcc_syntax::ast::ParenthesizedExpression\">ParenthesizedExpression</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.HasChild.html\" title=\"trait type_sitter_lib::node::HasChild\">HasChild</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.PreprocDefined.html\" title=\"struct mcc_syntax::ast::PreprocDefined\">PreprocDefined</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.HasChild.html\" title=\"trait type_sitter_lib::node::HasChild\">HasChild</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.SubscriptDesignator.html\" title=\"struct mcc_syntax::ast::SubscriptDesignator\">SubscriptDesignator</a>&lt;'tree&gt;"]]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[3958]}