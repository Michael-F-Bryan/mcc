(function() {
    var implementors = Object.fromEntries([["mcc_syntax",[["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.AbstractDeclarator_Declarator.html\" title=\"enum mcc_syntax::ast::anon_unions::AbstractDeclarator_Declarator\">AbstractDeclarator_Declarator</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.AbstractDeclarator_MsCallModifier.html\" title=\"enum mcc_syntax::ast::anon_unions::AbstractDeclarator_MsCallModifier\">AbstractDeclarator_MsCallModifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.AddAdd_SubSub.html\" title=\"enum mcc_syntax::ast::anon_unions::AddAdd_SubSub\">AddAdd_SubSub</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.And_Mul.html\" title=\"enum mcc_syntax::ast::anon_unions::And_Mul\">And_Mul</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.Anon183278624942340581816410858871243798377.html\" title=\"enum mcc_syntax::ast::anon_unions::Anon183278624942340581816410858871243798377\">Anon183278624942340581816410858871243798377</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.Anon221528917966839016187242056758794219644.html\" title=\"enum mcc_syntax::ast::anon_unions::Anon221528917966839016187242056758794219644\">Anon221528917966839016187242056758794219644</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.Anon252313443193347449155203865256745180226.html\" title=\"enum mcc_syntax::ast::anon_unions::Anon252313443193347449155203865256745180226\">Anon252313443193347449155203865256745180226</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.Anon267732478745780035329928636158259030098.html\" title=\"enum mcc_syntax::ast::anon_unions::Anon267732478745780035329928636158259030098\">Anon267732478745780035329928636158259030098</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.Anon31709460568964487651942532477213173337.html\" title=\"enum mcc_syntax::ast::anon_unions::Anon31709460568964487651942532477213173337\">Anon31709460568964487651942532477213173337</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.Anon320125311414366363403436071030129454385.html\" title=\"enum mcc_syntax::ast::anon_unions::Anon320125311414366363403436071030129454385\">Anon320125311414366363403436071030129454385</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.Anon322931898689134390255042975415799117413.html\" title=\"enum mcc_syntax::ast::anon_unions::Anon322931898689134390255042975415799117413\">Anon322931898689134390255042975415799117413</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.Anon60801783647056412391192139585218646527.html\" title=\"enum mcc_syntax::ast::anon_unions::Anon60801783647056412391192139585218646527\">Anon60801783647056412391192139585218646527</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.Anon64011665969386147009847441607881057992.html\" title=\"enum mcc_syntax::ast::anon_unions::Anon64011665969386147009847441607881057992\">Anon64011665969386147009847441607881057992</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.AttributeDeclaration_AttributeSpecifier_MsDeclspecModifier_StorageClassSpecifier_TypeQualifier.html\" title=\"enum mcc_syntax::ast::anon_unions::AttributeDeclaration_AttributeSpecifier_MsDeclspecModifier_StorageClassSpecifier_TypeQualifier\">AttributeDeclaration_AttributeSpecifier_MsDeclspecModifier_StorageClassSpecifier_TypeQualifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.AttributeDeclaration_Statement.html\" title=\"enum mcc_syntax::ast::anon_unions::AttributeDeclaration_Statement\">AttributeDeclaration_Statement</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.AttributeSpecifier_CallExpression_GnuAsmExpression_Identifier.html\" title=\"enum mcc_syntax::ast::anon_unions::AttributeSpecifier_CallExpression_GnuAsmExpression_Identifier\">AttributeSpecifier_CallExpression_GnuAsmExpression_Identifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.AttributeSpecifier_MsDeclspecModifier.html\" title=\"enum mcc_syntax::ast::anon_unions::AttributeSpecifier_MsDeclspecModifier\">AttributeSpecifier_MsDeclspecModifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.AttributeSpecifier_TypeQualifier.html\" title=\"enum mcc_syntax::ast::anon_unions::AttributeSpecifier_TypeQualifier\">AttributeSpecifier_TypeQualifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.CallExpression_Identifier_StringLiteral_SystemLibString.html\" title=\"enum mcc_syntax::ast::anon_unions::CallExpression_Identifier_StringLiteral_SystemLibString\">CallExpression_Identifier_StringLiteral_SystemLibString</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.Character_EscapeSequence.html\" title=\"enum mcc_syntax::ast::anon_unions::Character_EscapeSequence\">Character_EscapeSequence</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.CommaExpression_CompoundStatement_Expression_PreprocDefined.html\" title=\"enum mcc_syntax::ast::anon_unions::CommaExpression_CompoundStatement_Expression_PreprocDefined\">CommaExpression_CompoundStatement_Expression_PreprocDefined</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.CommaExpression_Declaration_Expression.html\" title=\"enum mcc_syntax::ast::anon_unions::CommaExpression_Declaration_Expression\">CommaExpression_Declaration_Expression</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.CommaExpression_Expression.html\" title=\"enum mcc_syntax::ast::anon_unions::CommaExpression_Expression\">CommaExpression_Expression</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.CompoundStatement_Expression_PreprocDefined.html\" title=\"enum mcc_syntax::ast::anon_unions::CompoundStatement_Expression_PreprocDefined\">CompoundStatement_Expression_PreprocDefined</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.CompoundStatement_Identifier_ParameterDeclaration_VariadicParameter.html\" title=\"enum mcc_syntax::ast::anon_unions::CompoundStatement_Identifier_ParameterDeclaration_VariadicParameter\">CompoundStatement_Identifier_ParameterDeclaration_VariadicParameter</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.ConcatenatedString_StringLiteral.html\" title=\"enum mcc_syntax::ast::anon_unions::ConcatenatedString_StringLiteral\">ConcatenatedString_StringLiteral</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.Declaration_DeclarationList_FunctionDefinition.html\" title=\"enum mcc_syntax::ast::anon_unions::Declaration_DeclarationList_FunctionDefinition\">Declaration_DeclarationList_FunctionDefinition</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.Declaration_Statement.html\" title=\"enum mcc_syntax::ast::anon_unions::Declaration_Statement\">Declaration_Statement</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.Declarator_FieldDeclarator_TypeDeclarator.html\" title=\"enum mcc_syntax::ast::anon_unions::Declarator_FieldDeclarator_TypeDeclarator\">Declarator_FieldDeclarator_TypeDeclarator</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.Declarator_FieldDeclarator_TypeDeclarator_AttributeDeclaration.html\" title=\"enum mcc_syntax::ast::anon_unions::Declarator_FieldDeclarator_TypeDeclarator_AttributeDeclaration\">Declarator_FieldDeclarator_TypeDeclarator_AttributeDeclaration</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.Declarator_FieldDeclarator_TypeDeclarator_MsCallModifier.html\" title=\"enum mcc_syntax::ast::anon_unions::Declarator_FieldDeclarator_TypeDeclarator_MsCallModifier\">Declarator_FieldDeclarator_TypeDeclarator_MsCallModifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.Enumerator_PreprocCall_PreprocIf_PreprocIfdef.html\" title=\"enum mcc_syntax::ast::anon_unions::Enumerator_PreprocCall_PreprocIf_PreprocIfdef\">Enumerator_PreprocCall_PreprocIf_PreprocIfdef</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.EscapeSequence_StringContent.html\" title=\"enum mcc_syntax::ast::anon_unions::EscapeSequence_StringContent\">EscapeSequence_StringContent</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.Expression_InitializerList.html\" title=\"enum mcc_syntax::ast::anon_unions::Expression_InitializerList\">Expression_InitializerList</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.Expression_InitializerList_InitializerPair.html\" title=\"enum mcc_syntax::ast::anon_unions::Expression_InitializerList_InitializerPair\">Expression_InitializerList_InitializerPair</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.Expression_PreprocDefined.html\" title=\"enum mcc_syntax::ast::anon_unions::Expression_PreprocDefined\">Expression_PreprocDefined</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.Expression_TypeDescriptor.html\" title=\"enum mcc_syntax::ast::anon_unions::Expression_TypeDescriptor\">Expression_TypeDescriptor</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.FieldDeclaration_PreprocCall_PreprocDef_PreprocFunctionDef_PreprocIf_PreprocIfdef.html\" title=\"enum mcc_syntax::ast::anon_unions::FieldDeclaration_PreprocCall_PreprocDef_PreprocFunctionDef_PreprocIf_PreprocIfdef\">FieldDeclaration_PreprocCall_PreprocDef_PreprocFunctionDef_PreprocIf_PreprocIfdef</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.FieldDesignator_FieldIdentifier_SubscriptDesignator_SubscriptRangeDesignator.html\" title=\"enum mcc_syntax::ast::anon_unions::FieldDesignator_FieldIdentifier_SubscriptDesignator_SubscriptRangeDesignator\">FieldDesignator_FieldIdentifier_SubscriptDesignator_SubscriptRangeDesignator</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.Identifier_StringLiteral.html\" title=\"enum mcc_syntax::ast::anon_unions::Identifier_StringLiteral\">Identifier_StringLiteral</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.ModEq_AndEq_MulEq_AddEq_SubEq_DivEq_LtLtEq_Eq_GtGtEq_BitXorEq_OrEq.html\" title=\"enum mcc_syntax::ast::anon_unions::ModEq_AndEq_MulEq_AddEq_SubEq_DivEq_LtLtEq_Eq_GtGtEq_BitXorEq_OrEq\">ModEq_AndEq_MulEq_AddEq_SubEq_DivEq_LtLtEq_Eq_GtGtEq_BitXorEq_OrEq</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.MsBasedModifier_MsPointerModifier_TypeQualifier.html\" title=\"enum mcc_syntax::ast::anon_unions::MsBasedModifier_MsPointerModifier_TypeQualifier\">MsBasedModifier_MsPointerModifier_TypeQualifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.MsPointerModifier_TypeQualifier.html\" title=\"enum mcc_syntax::ast::anon_unions::MsPointerModifier_TypeQualifier\">MsPointerModifier_TypeQualifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.MsRestrictModifier_MsSignedPtrModifier_MsUnalignedPtrModifier_MsUnsignedPtrModifier.html\" title=\"enum mcc_syntax::ast::anon_unions::MsRestrictModifier_MsSignedPtrModifier_MsUnalignedPtrModifier_MsUnsignedPtrModifier\">MsRestrictModifier_MsSignedPtrModifier_MsUnalignedPtrModifier_MsUnsignedPtrModifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.Mul_Expression.html\" title=\"enum mcc_syntax::ast::anon_unions::Mul_Expression\">Mul_Expression</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.NotEq_Mod_And_AndAnd_Mul_Add_Sub_Div_Lt_LtLt_LtEq_EqEq_Gt_GtEq_GtGt_BitXor_Or_OrOr.html\" title=\"enum mcc_syntax::ast::anon_unions::NotEq_Mod_And_AndAnd_Mul_Add_Sub_Div_Lt_LtLt_LtEq_EqEq_Gt_GtEq_GtGt_BitXor_Or_OrOr\">NotEq_Mod_And_AndAnd_Mul_Add_Sub_Div_Lt_LtLt_LtEq_EqEq_Gt_GtEq_GtGt_BitXor_Or_OrOr</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.Not_Add_Sub_BitNot.html\" title=\"enum mcc_syntax::ast::anon_unions::Not_Add_Sub_BitNot\">Not_Add_Sub_BitNot</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.PreprocElif_PreprocElifdef_PreprocElse.html\" title=\"enum mcc_syntax::ast::anon_unions::PreprocElif_PreprocElifdef_PreprocElse\">PreprocElif_PreprocElifdef_PreprocElse</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.PrimitiveType_TypeIdentifier.html\" title=\"enum mcc_syntax::ast::anon_unions::PrimitiveType_TypeIdentifier\">PrimitiveType_TypeIdentifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.SehExceptClause_SehFinallyClause.html\" title=\"enum mcc_syntax::ast::anon_unions::SehExceptClause_SehFinallyClause\">SehExceptClause_SehFinallyClause</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/anon_unions/enum.SubGt_Dot.html\" title=\"enum mcc_syntax::ast::anon_unions::SubGt_Dot\">SubGt_Dot</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/enum.AbstractDeclarator.html\" title=\"enum mcc_syntax::ast::AbstractDeclarator\">AbstractDeclarator</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/enum.Declarator.html\" title=\"enum mcc_syntax::ast::Declarator\">Declarator</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/enum.Expression.html\" title=\"enum mcc_syntax::ast::Expression\">Expression</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/enum.FieldDeclarator.html\" title=\"enum mcc_syntax::ast::FieldDeclarator\">FieldDeclarator</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/enum.Statement.html\" title=\"enum mcc_syntax::ast::Statement\">Statement</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/enum.TypeDeclarator.html\" title=\"enum mcc_syntax::ast::TypeDeclarator\">TypeDeclarator</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"enum\" href=\"mcc_syntax/ast/enum.TypeSpecifier.html\" title=\"enum mcc_syntax::ast::TypeSpecifier\">TypeSpecifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.AbstractArrayDeclarator.html\" title=\"struct mcc_syntax::ast::AbstractArrayDeclarator\">AbstractArrayDeclarator</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.AbstractFunctionDeclarator.html\" title=\"struct mcc_syntax::ast::AbstractFunctionDeclarator\">AbstractFunctionDeclarator</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.AbstractParenthesizedDeclarator.html\" title=\"struct mcc_syntax::ast::AbstractParenthesizedDeclarator\">AbstractParenthesizedDeclarator</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.AbstractPointerDeclarator.html\" title=\"struct mcc_syntax::ast::AbstractPointerDeclarator\">AbstractPointerDeclarator</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.AlignasQualifier.html\" title=\"struct mcc_syntax::ast::AlignasQualifier\">AlignasQualifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.AlignofExpression.html\" title=\"struct mcc_syntax::ast::AlignofExpression\">AlignofExpression</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.ArgumentList.html\" title=\"struct mcc_syntax::ast::ArgumentList\">ArgumentList</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.ArrayDeclarator.html\" title=\"struct mcc_syntax::ast::ArrayDeclarator\">ArrayDeclarator</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.AssignmentExpression.html\" title=\"struct mcc_syntax::ast::AssignmentExpression\">AssignmentExpression</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.Attribute.html\" title=\"struct mcc_syntax::ast::Attribute\">Attribute</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.AttributeDeclaration.html\" title=\"struct mcc_syntax::ast::AttributeDeclaration\">AttributeDeclaration</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.AttributeSpecifier.html\" title=\"struct mcc_syntax::ast::AttributeSpecifier\">AttributeSpecifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.AttributedDeclarator.html\" title=\"struct mcc_syntax::ast::AttributedDeclarator\">AttributedDeclarator</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.AttributedStatement.html\" title=\"struct mcc_syntax::ast::AttributedStatement\">AttributedStatement</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.BinaryExpression.html\" title=\"struct mcc_syntax::ast::BinaryExpression\">BinaryExpression</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.BitfieldClause.html\" title=\"struct mcc_syntax::ast::BitfieldClause\">BitfieldClause</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.BreakStatement.html\" title=\"struct mcc_syntax::ast::BreakStatement\">BreakStatement</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.CallExpression.html\" title=\"struct mcc_syntax::ast::CallExpression\">CallExpression</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.CaseStatement.html\" title=\"struct mcc_syntax::ast::CaseStatement\">CaseStatement</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.CastExpression.html\" title=\"struct mcc_syntax::ast::CastExpression\">CastExpression</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.CharLiteral.html\" title=\"struct mcc_syntax::ast::CharLiteral\">CharLiteral</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.Character.html\" title=\"struct mcc_syntax::ast::Character\">Character</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.CommaExpression.html\" title=\"struct mcc_syntax::ast::CommaExpression\">CommaExpression</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.Comment.html\" title=\"struct mcc_syntax::ast::Comment\">Comment</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.CompoundLiteralExpression.html\" title=\"struct mcc_syntax::ast::CompoundLiteralExpression\">CompoundLiteralExpression</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.CompoundStatement.html\" title=\"struct mcc_syntax::ast::CompoundStatement\">CompoundStatement</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.ConcatenatedString.html\" title=\"struct mcc_syntax::ast::ConcatenatedString\">ConcatenatedString</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.ConditionalExpression.html\" title=\"struct mcc_syntax::ast::ConditionalExpression\">ConditionalExpression</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.ContinueStatement.html\" title=\"struct mcc_syntax::ast::ContinueStatement\">ContinueStatement</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.Declaration.html\" title=\"struct mcc_syntax::ast::Declaration\">Declaration</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.DeclarationList.html\" title=\"struct mcc_syntax::ast::DeclarationList\">DeclarationList</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.DoStatement.html\" title=\"struct mcc_syntax::ast::DoStatement\">DoStatement</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.ElseClause.html\" title=\"struct mcc_syntax::ast::ElseClause\">ElseClause</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.EnumSpecifier.html\" title=\"struct mcc_syntax::ast::EnumSpecifier\">EnumSpecifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.Enumerator.html\" title=\"struct mcc_syntax::ast::Enumerator\">Enumerator</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.EnumeratorList.html\" title=\"struct mcc_syntax::ast::EnumeratorList\">EnumeratorList</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.EscapeSequence.html\" title=\"struct mcc_syntax::ast::EscapeSequence\">EscapeSequence</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.ExpressionStatement.html\" title=\"struct mcc_syntax::ast::ExpressionStatement\">ExpressionStatement</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.ExtensionExpression.html\" title=\"struct mcc_syntax::ast::ExtensionExpression\">ExtensionExpression</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.False.html\" title=\"struct mcc_syntax::ast::False\">False</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.FieldDeclaration.html\" title=\"struct mcc_syntax::ast::FieldDeclaration\">FieldDeclaration</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.FieldDeclarationList.html\" title=\"struct mcc_syntax::ast::FieldDeclarationList\">FieldDeclarationList</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.FieldDesignator.html\" title=\"struct mcc_syntax::ast::FieldDesignator\">FieldDesignator</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.FieldExpression.html\" title=\"struct mcc_syntax::ast::FieldExpression\">FieldExpression</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.FieldIdentifier.html\" title=\"struct mcc_syntax::ast::FieldIdentifier\">FieldIdentifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.ForStatement.html\" title=\"struct mcc_syntax::ast::ForStatement\">ForStatement</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.FunctionDeclarator.html\" title=\"struct mcc_syntax::ast::FunctionDeclarator\">FunctionDeclarator</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.FunctionDefinition.html\" title=\"struct mcc_syntax::ast::FunctionDefinition\">FunctionDefinition</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.GenericExpression.html\" title=\"struct mcc_syntax::ast::GenericExpression\">GenericExpression</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.GnuAsmClobberList.html\" title=\"struct mcc_syntax::ast::GnuAsmClobberList\">GnuAsmClobberList</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.GnuAsmExpression.html\" title=\"struct mcc_syntax::ast::GnuAsmExpression\">GnuAsmExpression</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.GnuAsmGotoList.html\" title=\"struct mcc_syntax::ast::GnuAsmGotoList\">GnuAsmGotoList</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.GnuAsmInputOperand.html\" title=\"struct mcc_syntax::ast::GnuAsmInputOperand\">GnuAsmInputOperand</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.GnuAsmInputOperandList.html\" title=\"struct mcc_syntax::ast::GnuAsmInputOperandList\">GnuAsmInputOperandList</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.GnuAsmOutputOperand.html\" title=\"struct mcc_syntax::ast::GnuAsmOutputOperand\">GnuAsmOutputOperand</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.GnuAsmOutputOperandList.html\" title=\"struct mcc_syntax::ast::GnuAsmOutputOperandList\">GnuAsmOutputOperandList</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.GnuAsmQualifier.html\" title=\"struct mcc_syntax::ast::GnuAsmQualifier\">GnuAsmQualifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.GotoStatement.html\" title=\"struct mcc_syntax::ast::GotoStatement\">GotoStatement</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.Identifier.html\" title=\"struct mcc_syntax::ast::Identifier\">Identifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.IfStatement.html\" title=\"struct mcc_syntax::ast::IfStatement\">IfStatement</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.InitDeclarator.html\" title=\"struct mcc_syntax::ast::InitDeclarator\">InitDeclarator</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.InitializerList.html\" title=\"struct mcc_syntax::ast::InitializerList\">InitializerList</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.InitializerPair.html\" title=\"struct mcc_syntax::ast::InitializerPair\">InitializerPair</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.LabeledStatement.html\" title=\"struct mcc_syntax::ast::LabeledStatement\">LabeledStatement</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.LinkageSpecification.html\" title=\"struct mcc_syntax::ast::LinkageSpecification\">LinkageSpecification</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.MacroTypeSpecifier.html\" title=\"struct mcc_syntax::ast::MacroTypeSpecifier\">MacroTypeSpecifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.MsBasedModifier.html\" title=\"struct mcc_syntax::ast::MsBasedModifier\">MsBasedModifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.MsCallModifier.html\" title=\"struct mcc_syntax::ast::MsCallModifier\">MsCallModifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.MsDeclspecModifier.html\" title=\"struct mcc_syntax::ast::MsDeclspecModifier\">MsDeclspecModifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.MsPointerModifier.html\" title=\"struct mcc_syntax::ast::MsPointerModifier\">MsPointerModifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.MsRestrictModifier.html\" title=\"struct mcc_syntax::ast::MsRestrictModifier\">MsRestrictModifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.MsSignedPtrModifier.html\" title=\"struct mcc_syntax::ast::MsSignedPtrModifier\">MsSignedPtrModifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.MsUnalignedPtrModifier.html\" title=\"struct mcc_syntax::ast::MsUnalignedPtrModifier\">MsUnalignedPtrModifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.MsUnsignedPtrModifier.html\" title=\"struct mcc_syntax::ast::MsUnsignedPtrModifier\">MsUnsignedPtrModifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.Null.html\" title=\"struct mcc_syntax::ast::Null\">Null</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.NumberLiteral.html\" title=\"struct mcc_syntax::ast::NumberLiteral\">NumberLiteral</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.OffsetofExpression.html\" title=\"struct mcc_syntax::ast::OffsetofExpression\">OffsetofExpression</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.ParameterDeclaration.html\" title=\"struct mcc_syntax::ast::ParameterDeclaration\">ParameterDeclaration</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.ParameterList.html\" title=\"struct mcc_syntax::ast::ParameterList\">ParameterList</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.ParenthesizedDeclarator.html\" title=\"struct mcc_syntax::ast::ParenthesizedDeclarator\">ParenthesizedDeclarator</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.ParenthesizedExpression.html\" title=\"struct mcc_syntax::ast::ParenthesizedExpression\">ParenthesizedExpression</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.PointerDeclarator.html\" title=\"struct mcc_syntax::ast::PointerDeclarator\">PointerDeclarator</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.PointerExpression.html\" title=\"struct mcc_syntax::ast::PointerExpression\">PointerExpression</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.PreprocArg.html\" title=\"struct mcc_syntax::ast::PreprocArg\">PreprocArg</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.PreprocCall.html\" title=\"struct mcc_syntax::ast::PreprocCall\">PreprocCall</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.PreprocDef.html\" title=\"struct mcc_syntax::ast::PreprocDef\">PreprocDef</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.PreprocDefined.html\" title=\"struct mcc_syntax::ast::PreprocDefined\">PreprocDefined</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.PreprocDirective.html\" title=\"struct mcc_syntax::ast::PreprocDirective\">PreprocDirective</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.PreprocElif.html\" title=\"struct mcc_syntax::ast::PreprocElif\">PreprocElif</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.PreprocElifdef.html\" title=\"struct mcc_syntax::ast::PreprocElifdef\">PreprocElifdef</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.PreprocElse.html\" title=\"struct mcc_syntax::ast::PreprocElse\">PreprocElse</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.PreprocFunctionDef.html\" title=\"struct mcc_syntax::ast::PreprocFunctionDef\">PreprocFunctionDef</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.PreprocIf.html\" title=\"struct mcc_syntax::ast::PreprocIf\">PreprocIf</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.PreprocIfdef.html\" title=\"struct mcc_syntax::ast::PreprocIfdef\">PreprocIfdef</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.PreprocInclude.html\" title=\"struct mcc_syntax::ast::PreprocInclude\">PreprocInclude</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.PreprocParams.html\" title=\"struct mcc_syntax::ast::PreprocParams\">PreprocParams</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.PrimitiveType.html\" title=\"struct mcc_syntax::ast::PrimitiveType\">PrimitiveType</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.ReturnStatement.html\" title=\"struct mcc_syntax::ast::ReturnStatement\">ReturnStatement</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.SehExceptClause.html\" title=\"struct mcc_syntax::ast::SehExceptClause\">SehExceptClause</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.SehFinallyClause.html\" title=\"struct mcc_syntax::ast::SehFinallyClause\">SehFinallyClause</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.SehLeaveStatement.html\" title=\"struct mcc_syntax::ast::SehLeaveStatement\">SehLeaveStatement</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.SehTryStatement.html\" title=\"struct mcc_syntax::ast::SehTryStatement\">SehTryStatement</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.SizedTypeSpecifier.html\" title=\"struct mcc_syntax::ast::SizedTypeSpecifier\">SizedTypeSpecifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.SizeofExpression.html\" title=\"struct mcc_syntax::ast::SizeofExpression\">SizeofExpression</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.StatementIdentifier.html\" title=\"struct mcc_syntax::ast::StatementIdentifier\">StatementIdentifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.StorageClassSpecifier.html\" title=\"struct mcc_syntax::ast::StorageClassSpecifier\">StorageClassSpecifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.StringContent.html\" title=\"struct mcc_syntax::ast::StringContent\">StringContent</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.StringLiteral.html\" title=\"struct mcc_syntax::ast::StringLiteral\">StringLiteral</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.StructSpecifier.html\" title=\"struct mcc_syntax::ast::StructSpecifier\">StructSpecifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.SubscriptDesignator.html\" title=\"struct mcc_syntax::ast::SubscriptDesignator\">SubscriptDesignator</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.SubscriptExpression.html\" title=\"struct mcc_syntax::ast::SubscriptExpression\">SubscriptExpression</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.SubscriptRangeDesignator.html\" title=\"struct mcc_syntax::ast::SubscriptRangeDesignator\">SubscriptRangeDesignator</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.SwitchStatement.html\" title=\"struct mcc_syntax::ast::SwitchStatement\">SwitchStatement</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.SystemLibString.html\" title=\"struct mcc_syntax::ast::SystemLibString\">SystemLibString</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.TranslationUnit.html\" title=\"struct mcc_syntax::ast::TranslationUnit\">TranslationUnit</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.True.html\" title=\"struct mcc_syntax::ast::True\">True</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.TypeDefinition.html\" title=\"struct mcc_syntax::ast::TypeDefinition\">TypeDefinition</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.TypeDescriptor.html\" title=\"struct mcc_syntax::ast::TypeDescriptor\">TypeDescriptor</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.TypeIdentifier.html\" title=\"struct mcc_syntax::ast::TypeIdentifier\">TypeIdentifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.TypeQualifier.html\" title=\"struct mcc_syntax::ast::TypeQualifier\">TypeQualifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.UnaryExpression.html\" title=\"struct mcc_syntax::ast::UnaryExpression\">UnaryExpression</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.UnionSpecifier.html\" title=\"struct mcc_syntax::ast::UnionSpecifier\">UnionSpecifier</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.UpdateExpression.html\" title=\"struct mcc_syntax::ast::UpdateExpression\">UpdateExpression</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.VariadicParameter.html\" title=\"struct mcc_syntax::ast::VariadicParameter\">VariadicParameter</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/struct.WhileStatement.html\" title=\"struct mcc_syntax::ast::WhileStatement\">WhileStatement</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.Add.html\" title=\"struct mcc_syntax::ast::symbols::Add\">Add</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.AddAdd.html\" title=\"struct mcc_syntax::ast::symbols::AddAdd\">AddAdd</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.AddEq.html\" title=\"struct mcc_syntax::ast::symbols::AddEq\">AddEq</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.And.html\" title=\"struct mcc_syntax::ast::symbols::And\">And</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.AndAnd.html\" title=\"struct mcc_syntax::ast::symbols::AndAnd\">AndAnd</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.AndEq.html\" title=\"struct mcc_syntax::ast::symbols::AndEq\">AndEq</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.BitNot.html\" title=\"struct mcc_syntax::ast::symbols::BitNot\">BitNot</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.BitXor.html\" title=\"struct mcc_syntax::ast::symbols::BitXor\">BitXor</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.BitXorEq.html\" title=\"struct mcc_syntax::ast::symbols::BitXorEq\">BitXorEq</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.Colon.html\" title=\"struct mcc_syntax::ast::symbols::Colon\">Colon</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.ColonColon.html\" title=\"struct mcc_syntax::ast::symbols::ColonColon\">ColonColon</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.Comma.html\" title=\"struct mcc_syntax::ast::symbols::Comma\">Comma</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.Div.html\" title=\"struct mcc_syntax::ast::symbols::Div\">Div</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.DivEq.html\" title=\"struct mcc_syntax::ast::symbols::DivEq\">DivEq</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.Dot.html\" title=\"struct mcc_syntax::ast::symbols::Dot\">Dot</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.DotDotDot.html\" title=\"struct mcc_syntax::ast::symbols::DotDotDot\">DotDotDot</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.DoubleQuote.html\" title=\"struct mcc_syntax::ast::symbols::DoubleQuote\">DoubleQuote</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.Eq.html\" title=\"struct mcc_syntax::ast::symbols::Eq\">Eq</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.EqEq.html\" title=\"struct mcc_syntax::ast::symbols::EqEq\">EqEq</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.Gt.html\" title=\"struct mcc_syntax::ast::symbols::Gt\">Gt</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.GtEq.html\" title=\"struct mcc_syntax::ast::symbols::GtEq\">GtEq</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.GtGt.html\" title=\"struct mcc_syntax::ast::symbols::GtGt\">GtGt</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.GtGtEq.html\" title=\"struct mcc_syntax::ast::symbols::GtGtEq\">GtGtEq</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.Hashdefine.html\" title=\"struct mcc_syntax::ast::symbols::Hashdefine\">Hashdefine</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.Hashelif.html\" title=\"struct mcc_syntax::ast::symbols::Hashelif\">Hashelif</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.Hashelifdef.html\" title=\"struct mcc_syntax::ast::symbols::Hashelifdef\">Hashelifdef</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.Hashelifndef.html\" title=\"struct mcc_syntax::ast::symbols::Hashelifndef\">Hashelifndef</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.Hashelse.html\" title=\"struct mcc_syntax::ast::symbols::Hashelse\">Hashelse</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.Hashendif.html\" title=\"struct mcc_syntax::ast::symbols::Hashendif\">Hashendif</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.Hashif.html\" title=\"struct mcc_syntax::ast::symbols::Hashif\">Hashif</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.Hashifdef.html\" title=\"struct mcc_syntax::ast::symbols::Hashifdef\">Hashifdef</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.Hashifndef.html\" title=\"struct mcc_syntax::ast::symbols::Hashifndef\">Hashifndef</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.Hashinclude.html\" title=\"struct mcc_syntax::ast::symbols::Hashinclude\">Hashinclude</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.LBrace.html\" title=\"struct mcc_syntax::ast::symbols::LBrace\">LBrace</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.LBracket.html\" title=\"struct mcc_syntax::ast::symbols::LBracket\">LBracket</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.LBracketLBracket.html\" title=\"struct mcc_syntax::ast::symbols::LBracketLBracket\">LBracketLBracket</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.LDoubleQuote.html\" title=\"struct mcc_syntax::ast::symbols::LDoubleQuote\">LDoubleQuote</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.LParen.html\" title=\"struct mcc_syntax::ast::symbols::LParen\">LParen</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.LQuote.html\" title=\"struct mcc_syntax::ast::symbols::LQuote\">LQuote</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.Lt.html\" title=\"struct mcc_syntax::ast::symbols::Lt\">Lt</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.LtEq.html\" title=\"struct mcc_syntax::ast::symbols::LtEq\">LtEq</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.LtLt.html\" title=\"struct mcc_syntax::ast::symbols::LtLt\">LtLt</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.LtLtEq.html\" title=\"struct mcc_syntax::ast::symbols::LtLtEq\">LtLtEq</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.Mod.html\" title=\"struct mcc_syntax::ast::symbols::Mod\">Mod</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.ModEq.html\" title=\"struct mcc_syntax::ast::symbols::ModEq\">ModEq</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.Mul.html\" title=\"struct mcc_syntax::ast::symbols::Mul\">Mul</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.MulEq.html\" title=\"struct mcc_syntax::ast::symbols::MulEq\">MulEq</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.Newline.html\" title=\"struct mcc_syntax::ast::symbols::Newline\">Newline</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.Not.html\" title=\"struct mcc_syntax::ast::symbols::Not\">Not</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.NotEq.html\" title=\"struct mcc_syntax::ast::symbols::NotEq\">NotEq</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.Or.html\" title=\"struct mcc_syntax::ast::symbols::Or\">Or</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.OrEq.html\" title=\"struct mcc_syntax::ast::symbols::OrEq\">OrEq</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.OrOr.html\" title=\"struct mcc_syntax::ast::symbols::OrOr\">OrOr</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.Question.html\" title=\"struct mcc_syntax::ast::symbols::Question\">Question</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.Quote.html\" title=\"struct mcc_syntax::ast::symbols::Quote\">Quote</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.RBrace.html\" title=\"struct mcc_syntax::ast::symbols::RBrace\">RBrace</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.RBracket.html\" title=\"struct mcc_syntax::ast::symbols::RBracket\">RBracket</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.RBracketRBracket.html\" title=\"struct mcc_syntax::ast::symbols::RBracketRBracket\">RBracketRBracket</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.RParen.html\" title=\"struct mcc_syntax::ast::symbols::RParen\">RParen</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.Semicolon.html\" title=\"struct mcc_syntax::ast::symbols::Semicolon\">Semicolon</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.Sub.html\" title=\"struct mcc_syntax::ast::symbols::Sub\">Sub</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.SubEq.html\" title=\"struct mcc_syntax::ast::symbols::SubEq\">SubEq</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.SubGt.html\" title=\"struct mcc_syntax::ast::symbols::SubGt\">SubGt</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.SubSub.html\" title=\"struct mcc_syntax::ast::symbols::SubSub\">SubSub</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.U8DoubleQuote.html\" title=\"struct mcc_syntax::ast::symbols::U8DoubleQuote\">U8DoubleQuote</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.U8Quote.html\" title=\"struct mcc_syntax::ast::symbols::U8Quote\">U8Quote</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.UDoubleQuote.html\" title=\"struct mcc_syntax::ast::symbols::UDoubleQuote\">UDoubleQuote</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.UDoubleQuote_.html\" title=\"struct mcc_syntax::ast::symbols::UDoubleQuote_\">UDoubleQuote_</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.UQuote.html\" title=\"struct mcc_syntax::ast::symbols::UQuote\">UQuote</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/symbols/struct.UQuote_.html\" title=\"struct mcc_syntax::ast::symbols::UQuote_\">UQuote_</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Alignas.html\" title=\"struct mcc_syntax::ast::unnamed::Alignas\">Alignas</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Alignas_.html\" title=\"struct mcc_syntax::ast::unnamed::Alignas_\">Alignas_</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Alignof.html\" title=\"struct mcc_syntax::ast::unnamed::Alignof\">Alignof</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Alignof_.html\" title=\"struct mcc_syntax::ast::unnamed::Alignof_\">Alignof_</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Alignof__.html\" title=\"struct mcc_syntax::ast::unnamed::Alignof__\">Alignof__</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Alignof___.html\" title=\"struct mcc_syntax::ast::unnamed::Alignof___\">Alignof___</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Alignof____.html\" title=\"struct mcc_syntax::ast::unnamed::Alignof____\">Alignof____</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Asm.html\" title=\"struct mcc_syntax::ast::unnamed::Asm\">Asm</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Asm_.html\" title=\"struct mcc_syntax::ast::unnamed::Asm_\">Asm_</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Asm__.html\" title=\"struct mcc_syntax::ast::unnamed::Asm__\">Asm__</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Atomic.html\" title=\"struct mcc_syntax::ast::unnamed::Atomic\">Atomic</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Attribute.html\" title=\"struct mcc_syntax::ast::unnamed::Attribute\">Attribute</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Attribute_.html\" title=\"struct mcc_syntax::ast::unnamed::Attribute_\">Attribute_</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Auto.html\" title=\"struct mcc_syntax::ast::unnamed::Auto\">Auto</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Based.html\" title=\"struct mcc_syntax::ast::unnamed::Based\">Based</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Break.html\" title=\"struct mcc_syntax::ast::unnamed::Break\">Break</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Case.html\" title=\"struct mcc_syntax::ast::unnamed::Case\">Case</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Cdecl.html\" title=\"struct mcc_syntax::ast::unnamed::Cdecl\">Cdecl</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Clrcall.html\" title=\"struct mcc_syntax::ast::unnamed::Clrcall\">Clrcall</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Const.html\" title=\"struct mcc_syntax::ast::unnamed::Const\">Const</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Constexpr.html\" title=\"struct mcc_syntax::ast::unnamed::Constexpr\">Constexpr</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Continue.html\" title=\"struct mcc_syntax::ast::unnamed::Continue\">Continue</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Declspec.html\" title=\"struct mcc_syntax::ast::unnamed::Declspec\">Declspec</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Default.html\" title=\"struct mcc_syntax::ast::unnamed::Default\">Default</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Defined.html\" title=\"struct mcc_syntax::ast::unnamed::Defined\">Defined</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Do.html\" title=\"struct mcc_syntax::ast::unnamed::Do\">Do</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Else.html\" title=\"struct mcc_syntax::ast::unnamed::Else\">Else</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Enum.html\" title=\"struct mcc_syntax::ast::unnamed::Enum\">Enum</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Except.html\" title=\"struct mcc_syntax::ast::unnamed::Except\">Except</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Extension.html\" title=\"struct mcc_syntax::ast::unnamed::Extension\">Extension</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Extern.html\" title=\"struct mcc_syntax::ast::unnamed::Extern\">Extern</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Fastcall.html\" title=\"struct mcc_syntax::ast::unnamed::Fastcall\">Fastcall</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Finally.html\" title=\"struct mcc_syntax::ast::unnamed::Finally\">Finally</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.For.html\" title=\"struct mcc_syntax::ast::unnamed::For\">For</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Forceinline.html\" title=\"struct mcc_syntax::ast::unnamed::Forceinline\">Forceinline</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Generic.html\" title=\"struct mcc_syntax::ast::unnamed::Generic\">Generic</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Goto.html\" title=\"struct mcc_syntax::ast::unnamed::Goto\">Goto</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.If.html\" title=\"struct mcc_syntax::ast::unnamed::If\">If</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Inline.html\" title=\"struct mcc_syntax::ast::unnamed::Inline\">Inline</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Inline_.html\" title=\"struct mcc_syntax::ast::unnamed::Inline_\">Inline_</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Inline__.html\" title=\"struct mcc_syntax::ast::unnamed::Inline__\">Inline__</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Leave.html\" title=\"struct mcc_syntax::ast::unnamed::Leave\">Leave</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Long.html\" title=\"struct mcc_syntax::ast::unnamed::Long\">Long</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Nonnull.html\" title=\"struct mcc_syntax::ast::unnamed::Nonnull\">Nonnull</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Noreturn.html\" title=\"struct mcc_syntax::ast::unnamed::Noreturn\">Noreturn</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Noreturn_.html\" title=\"struct mcc_syntax::ast::unnamed::Noreturn_\">Noreturn_</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Null.html\" title=\"struct mcc_syntax::ast::unnamed::Null\">Null</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Nullptr.html\" title=\"struct mcc_syntax::ast::unnamed::Nullptr\">Nullptr</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Offsetof.html\" title=\"struct mcc_syntax::ast::unnamed::Offsetof\">Offsetof</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Register.html\" title=\"struct mcc_syntax::ast::unnamed::Register\">Register</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Restrict.html\" title=\"struct mcc_syntax::ast::unnamed::Restrict\">Restrict</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Restrict_.html\" title=\"struct mcc_syntax::ast::unnamed::Restrict_\">Restrict_</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Return.html\" title=\"struct mcc_syntax::ast::unnamed::Return\">Return</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Short.html\" title=\"struct mcc_syntax::ast::unnamed::Short\">Short</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Signed.html\" title=\"struct mcc_syntax::ast::unnamed::Signed\">Signed</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Sizeof.html\" title=\"struct mcc_syntax::ast::unnamed::Sizeof\">Sizeof</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Static.html\" title=\"struct mcc_syntax::ast::unnamed::Static\">Static</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Stdcall.html\" title=\"struct mcc_syntax::ast::unnamed::Stdcall\">Stdcall</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Struct.html\" title=\"struct mcc_syntax::ast::unnamed::Struct\">Struct</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Switch.html\" title=\"struct mcc_syntax::ast::unnamed::Switch\">Switch</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Thiscall.html\" title=\"struct mcc_syntax::ast::unnamed::Thiscall\">Thiscall</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Thread.html\" title=\"struct mcc_syntax::ast::unnamed::Thread\">Thread</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.ThreadLocal.html\" title=\"struct mcc_syntax::ast::unnamed::ThreadLocal\">ThreadLocal</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Try.html\" title=\"struct mcc_syntax::ast::unnamed::Try\">Try</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Typedef.html\" title=\"struct mcc_syntax::ast::unnamed::Typedef\">Typedef</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Unaligned.html\" title=\"struct mcc_syntax::ast::unnamed::Unaligned\">Unaligned</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Unaligned_.html\" title=\"struct mcc_syntax::ast::unnamed::Unaligned_\">Unaligned_</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Union.html\" title=\"struct mcc_syntax::ast::unnamed::Union\">Union</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Unsigned.html\" title=\"struct mcc_syntax::ast::unnamed::Unsigned\">Unsigned</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Vectorcall.html\" title=\"struct mcc_syntax::ast::unnamed::Vectorcall\">Vectorcall</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Volatile.html\" title=\"struct mcc_syntax::ast::unnamed::Volatile\">Volatile</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.Volatile_.html\" title=\"struct mcc_syntax::ast::unnamed::Volatile_\">Volatile_</a>&lt;'tree&gt;"],["impl&lt;'tree&gt; <a class=\"trait\" href=\"type_sitter_lib/node/trait.Node.html\" title=\"trait type_sitter_lib::node::Node\">Node</a>&lt;'tree&gt; for <a class=\"struct\" href=\"mcc_syntax/ast/unnamed/struct.While.html\" title=\"struct mcc_syntax::ast::unnamed::While\">While</a>&lt;'tree&gt;"]]],["type_sitter",[]],["type_sitter_lib",[]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[105749,19,23]}